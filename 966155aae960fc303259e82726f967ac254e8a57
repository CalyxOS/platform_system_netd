{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d0f74ff_dcd79f71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-09-12T14:59:43Z",
      "side": 1,
      "message": "Is fwmark something we can freely modify? I don\u0027t know what the reserved section is for, but I\u0027m assuming it\u0027s for future additions AOSP may have? If so wouldn\u0027t this cause conflicts with such additions later (in which case we\u0027d have to resolve the conflict at that time)? And if the entire reserved space is used then there\u0027d be no good solution since the entire fwmark would be used by one thing or another (in which case we\u0027d need our own separate solution)?",
      "revId": "966155aae960fc303259e82726f967ac254e8a57",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12817abc_e6666422",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2024-09-12T15:00:47Z",
      "side": 1,
      "message": "That said, if there\u0027s no mechanism that exists currently that could help with this I\u0027d suggest this be uploaded to AOSP to ideally get some feedback or even integration upstream",
      "parentUuid": "6d0f74ff_dcd79f71",
      "revId": "966155aae960fc303259e82726f967ac254e8a57",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5009968_38d438ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-09-12T15:13:39Z",
      "side": 1,
      "message": "\u003e Is fwmark something we can freely modify?\n\nRoughly as free as anything else, with the below caveats...\n\n\u003e I don\u0027t know what the reserved section is for, but I\u0027m assuming it\u0027s for future additions AOSP may have?\n\nYes, I think so. That\u0027s usually what that means.\n\n\u003e If so wouldn\u0027t this cause conflicts with such additions later\n\nYes. It could happen. AOSP could use it all. But in my opinion, that\u0027s not likely to happen any time soon, and we could cross that bridge when we come to it. Who knows - by the time they were to use all reserved bits, they might have solved this bug. I would rather have a fix that works now than go without a fix because it *may* not work in the future.\n\nIf I knew of another way to tackle this issue, I\u0027d do it. But apart from some of the ideas I shared in [this GitLab comment](https://gitlab.com/CalyxOS/calyxos/-/issues/2680#note_2099018717), I don\u0027t know what else to do.\n\nI also don\u0027t want to get held up by AOSP if possible. I think they\u0027d get caught up in too many details, and I don\u0027t think this would be their preferred solution. It\u0027s ultimately not mine, either, but without other ideas, it\u0027s either this or leaving it unfixed. They\u0027d probably prefer the latter, but I\u0027d prefer the former.",
      "parentUuid": "12817abc_e6666422",
      "revId": "966155aae960fc303259e82726f967ac254e8a57",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Builds",
        "description": {
          "value": "Make sure it builds. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Builds\u003dMAX AND -label:Builds\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Builds\u003d0 AND (label:Works\u003dMAX OR label:Bypass-Verification\u003dMAX)"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=MAX AND -label:Builds=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Builds=MAX","label:Builds=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Builds=0 AND (label:Works=MAX OR label:Bypass-Verification=MAX)"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Works=MAX","label:Builds=0"],"failingAtoms":["label:Bypass-Verification=MAX"]}
      },
      "patchSetCommitId": "966155aae960fc303259e82726f967ac254e8a57",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum vote is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "966155aae960fc303259e82726f967ac254e8a57",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Works",
        "description": {
          "value": "Make sure it works. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Works\u003dMAX AND -label:Works\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Works\u003d0 AND label:Bypass-Verification\u003dMAX"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=MAX AND -label:Works=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Works=MAX"],"failingAtoms":["label:Works=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Works=0 AND label:Bypass-Verification=MAX"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bypass-Verification=MAX","label:Works=0"]}
      },
      "patchSetCommitId": "966155aae960fc303259e82726f967ac254e8a57",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}